name: Deploy to Oracle ADB

on:
  push:
    branches:
      - main
      - desa
      - test
      - qa
      - prd
      

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:      
      SQLCL_DIR: ${{ github.workspace }}/sqlcl
      OJDBC_DIR: ${{ github.workspace }}/ojdbc
      DB_USER_DESA: ${{ vars.DB_USER_DESA }}
      DB_USER_TEST: ${{ vars.DB_USER_TEST }}
      DB_USER_QA: ${{ vars.DB_USER_QA }}
      DB_USER_PRD: ${{ vars.DB_USER_PRD }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set variables based on branch
      id: set-variables
      run: |
        ref="${GITHUB_REF#refs/heads/}"
        echo "Branch: $ref"
        if [[ "$ref" == "desa" ]]; then
          echo "DB_USER=$DB_USER_DESA" >> $GITHUB_ENV          
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD_DESA }}" >> $GITHUB_ENV
          echo "TNS_ADMIN=${{ github.workspace }}/Wallet_APEXDEVDB" >> $GITHUB_ENV
          echo "DB_ALIAS=apexdevdb_high" >> $GITHUB_ENV
          echo "WALLET_FILE=Wallet_APEXDEVDB.zip" >> $GITHUB_ENV
          echo "DB_USER_DESA=$DB_USER_DESA"
        elif [[ "$ref" == "test" ]]; then
          echo "DB_USER=$DB_USER_TEST" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD_TST }}" >> $GITHUB_ENV
          echo "TNS_ADMIN=${{ github.workspace }}/Wallet_APEXTESTDB" >> $GITHUB_ENV
          echo "DB_ALIAS=apextestdb_high" >> $GITHUB_ENV
          echo "WALLET_FILE=Wallet_APEXTESTDB.zip" >> $GITHUB_ENV
        elif [[ "$ref" == "qa" ]]; then
          echo "DB_USER=$DB_USER_QA" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD_QA }}" >> $GITHUB_ENV
          echo "TNS_ADMIN=${{ github.workspace }}/Wallet_APEXQADB" >> $GITHUB_ENV
          echo "DB_ALIAS=apexqadb_high" >> $GITHUB_ENV
          echo "WALLET_FILE=Wallet_APEXQADB.zip" >> $GITHUB_ENV
        elif [[ "$ref" == "prd" ]]; then
          echo "DB_USER=$DB_USER_PRD" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD_PRD }}" >> $GITHUB_ENV
          echo "TNS_ADMIN=${{ github.workspace }}/Wallet_APEXPRDDB" >> $GITHUB_ENV
          echo "DB_ALIAS=apexprddb_high" >> $GITHUB_ENV
          echo "WALLET_FILE=Wallet_APEXPRDDB.zip" >> $GITHUB_ENV
        else
          echo "branch_not_supported=true" >> $GITHUB_ENV
        fi


    - name: Install SQLcl
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip wget
        wget --no-cookies --no-check-certificate \
             --header "Cookie: oraclelicense=accept-securebackup-cookie" \
             https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-latest.zip -O sqlcl.zip
        unzip -q sqlcl.zip -d sqlcl
      shell: bash  

    - name: Install Liquibase + Oracle extension
      run: |
       mkdir -p $HOME/liquibase
       curl -sSL https://github.com/liquibase/liquibase/releases/download/v4.29.2/liquibase-4.29.2.zip -o liquibase.zip
       unzip -q liquibase.zip -d $HOME/liquibase

       # Descargar extensiÃ³n de Oracle
       curl -sSL https://github.com/liquibase/liquibase-oracle/releases/download/v1.0.0/liquibase-oracle-1.0.0.jar \
       -o $HOME/liquibase/lib/liquibase-oracle.jar

       # Dar permisos al binario
       chmod +x $HOME/liquibase/liquibase

       # Exportar path
       echo "$HOME/liquibase" >> $GITHUB_PATH
      shell: bash
    
    - name: Download JDBC and PKI jars
      run: |
        mkdir -p ${OJDBC_DIR}
        curl -sSL https://download.oracle.com/otn-pub/otn_software/jdbc/ojdbc8-full/21/ojdbc8.jar -o ${OJDBC_DIR}/ojdbc8.jar
        curl -sSL https://download.oracle.com/otn-pub/otn_software/jdbc/ojdbc8-full/21/oraclepki.jar -o ${OJDBC_DIR}/oraclepki.jar
        curl -sSL https://download.oracle.com/otn-pub/otn_software/jdbc/ojdbc8-full/21/osdt_core.jar -o ${OJDBC_DIR}/osdt_core.jar
        curl -sSL https://download.oracle.com/otn-pub/otn_software/jdbc/ojdbc8-full/21/osdt_cert.jar -o ${OJDBC_DIR}/osdt_cert.jar
      shell: bash

    - name: Download and unzip Wallet
      run: |
        mkdir -p "${TNS_ADMIN}"
        unzip -o Wallet_APEXDEVDB.zip -d "${TNS_ADMIN}"
        echo "TNS_ADMIN=${TNS_ADMIN}" >> $GITHUB_ENV		
      shell: bash
      env:
        TNS_ADMIN: ${{ env.TNS_ADMIN }}

    - name: Run SQL script on Oracle ADB
      run: |
        export PATH="${SQLCL_DIR}/sqlcl/bin:$PATH"        
        export PATH="${GITHUB_WORKSPACE}/sqlcl/sqlcl/bin:$PATH"

        echo "DB_USER=${DB_USER}"
        echo "DB_PASSWORD=${DB_PASSWORD}"
        echo "DB_ALIAS=${DB_ALIAS}"
        echo "TNS_ADMIN=${TNS_ADMIN}"
        
        sql -s "\"${DB_USER}/${DB_PASSWORD}@${DB_ALIAS}\"" <<EOF          
          liquibase update -changelog-file changelog_001.sql
        exit;
        EOF
      env:
        TNS_ADMIN: ${{ env.TNS_ADMIN }}
        DB_ALIAS: ${{ env.DB_ALIAS }}
        DB_USER: ${{ env.DB_USER }}
        DB_PASSWORD: ${{ env.DB_PASSWORD }}
        SQLCL_DIR: ${{ github.workspace }}/sqlcl
